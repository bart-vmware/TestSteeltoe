static Steeltoe.Management.TaskCore.TaskServiceCollectionExtensions.AddTask(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Steeltoe.Common.IApplicationTask task) -> void
static Steeltoe.Management.TaskCore.TaskServiceCollectionExtensions.AddTask(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string name, System.Action<System.IServiceProvider> runAction, Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime = Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton) -> void
static Steeltoe.Management.TaskCore.TaskServiceCollectionExtensions.AddTask(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Func<System.IServiceProvider, Steeltoe.Common.IApplicationTask> factory, Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime = Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton) -> void
static Steeltoe.Management.TaskCore.TaskServiceCollectionExtensions.AddTask<T>(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime = Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton) -> void
static Steeltoe.Management.TaskCore.TaskWebHostExtensions.RunWithTasks(this Microsoft.AspNetCore.Hosting.IWebHost webHost) -> void
static Steeltoe.Management.TaskCore.TaskWebHostExtensions.RunWithTasks(this Microsoft.Extensions.Hosting.IHost host) -> void
Steeltoe.Management.TaskCore.DelegatingTask
Steeltoe.Management.TaskCore.DelegatingTask.DelegatingTask(string name, System.Action run) -> void
Steeltoe.Management.TaskCore.DelegatingTask.Name.get -> string
Steeltoe.Management.TaskCore.DelegatingTask.Run() -> void
Steeltoe.Management.TaskCore.TaskServiceCollectionExtensions
Steeltoe.Management.TaskCore.TaskWebHostExtensions